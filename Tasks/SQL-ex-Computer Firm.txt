xcopy /Q /Y "$(Targetpath)" "$(SolutionDir)\GameRunner\bin\Debug"





CREATE DATABASE [Computer firm]
GO
CREATE TABLE Product
(maker VARCHAR(10) NOT NULL,
model VARCHAR(50) PRIMARY KEY,
type VARCHAR(50) NOT NULL)
GO
CREATE TABLE pc
(code INTEGER PRIMARY KEY,
model VARCHAR(50) NOT NULL,
speed SMALLINT NOT NULL,
ram SMALLINT NOT NULL,
hd REAL NOT NULL,
cd VARCHAR(10) NOT NULL,
price MONEY,
FOREIGN KEY (model) REFERENCES Product(model))
GO
CREATE TABLE laptop
(code INTEGER PRIMARY KEY,
model VARCHAR(50) NOT NULL,
speed SMALLINT NOT NULL,
ram SMALLINT NOT NULL,
hd REAL NOT NULL,
price MONEY,
screen TINYINT NOT NULL,
FOREIGN KEY (model) REFERENCES Product(model))
GO
CREATE printer
(code INTEGER PRIMARY KEY,
model VARCHAR(50) NOT NULL,
color char(1) NOT NULL,
type varchar(10) NOT NULL,
price MONEY,
FOREIGN KEY (model) REFERENCES Product(model))


--Computer firm DB
1)
SELECT model, speed, hd 
FROM pc
WHERE price < 500


2) 
SELECT DISTINCT Maker
FROM Product
WHERE type = 'Printer'

--
(from p in Products
where p.Type == "Printer"
select new {p.Maker}).Distinct()

--
Products
.Where(p => p.Type == "Printer")
.Select(p => new
{
	Maker = p.Maker
}).Distinct()


3)
SELECT model, ram, screen
FROM laptop
WHERE price > 1000

--
from l in Laptops
where l.Price > 1000
select new 
{
	Model = l.Model,
	Ram = l.Ram,
	Screen = l.Screen
}

--
Laptops
.Where(l => l.Price > 1000)
.Select(l => new
{
	Model = l.Model,
	Ram = l.Ram,
	Screen = l.Screen
})


4)
SELECT *
FROM Printer
WHERE color = 'Y'



5)
SELECT model, speed, hd
FROM Pc
WHERE cd in ('12x', '24x') AND price < 600



6)
SELECT DISTINCT Product.maker, Laptop.speed
FROM Product INNER JOIN Laptop on product.model = laptop.model
WHERE Laptop.hd >= 10




7)
SELECT PC.model, price
FROM PC INNER JOIN   
     Product ON PC.model = Product.model
where product.maker='b'
UNION
SELECT Laptop.model, price 
FROM Laptop INNER JOIN   
     Product ON Laptop.model = Product.model
where product.maker='b'
UNION
SELECT Printer.model, price 
FROM Printer INNER JOIN   
     Product ON Printer.model = Product.model
where product.maker='b'




8)
select maker
from product
where type = 'pc'
except
select maker
from product
where type='laptop'



9)
Select distinct maker
from product
where type = 'pc'
 and model in
(select model
from pc
where speed >= '450')





10)
Select model, price
from printer
where price in 
(select max(price)
from printer)





11)
Select AVG(speed)
from pc



12) 
Select avg(speed)
from laptop
where price > 1000



13)
Select avg(speed)
from pc
where model in (
select model 
from product
where maker = 'a')



14) !!!
Select  maker, type
from product
group by type, maker
having count(model) > 1 and 


15) 
Select hd
from pc
group by hd
having count(hd) >1





16)
select distinct p1.model, p2.model, p1.speed, p1.ram
from PC as p1, PC as p2
where p1.model <> p2.model 
and p1.speed = p2.speed
and p1.ram = p2.ram
and p1.model > p2.model




17) !!!
SELECT DISTINCT p.type, l.model, l.speed
FROM Product p, Laptop l
WHERE l.speed < (SELECT MIN (speed) 
                 FROM PC) 
AND p.type = 'laptop'





 
18) !!!
Select distinct maker, price
from product inner join printer
on product.model = printer.model
where price in (select Min(price)
from Printer
where color = 'y')
and color = 'y'





19) 
select maker, avg(screen)
from product inner join laptop 
on (product.model = laptop.model)
group by maker





20)
select maker, count(type)
from product 
where type='PC'
group by maker
having count(type) > 2




21)
SELECT maker, MAX(price) as 'Maximum price'
FROM Product, PC
Where Product.model = PC.model
GROUP BY maker




22)
SELECT speed, AVG(price)
FROM PC
WHERE speed > 600
GROUP BY speed




23)
SELECT Distinct maker
From (Product inner join PC on Product.model = PC.model)
Where PC.speed >=750
intersect 
(SELECT Distinct maker
From (Product inner join laptop on Product.model = laptop.model)
Where laptop.speed >=750)




24)
select model
from 
(select model, price
from pc
union all
select model, price
from laptop
union all
select model, price
from printer) x
where price = (select  max(price)
from 
(select price
from pc
union all
select price
from laptop
union all
select price
from printer) x)
group by model





25)
select maker
from (product inner join PC 
on product.model = PC.model)

where speed =
(select max(speed)
from PC
where ram =
(select min(ram)
from PC
))  and ram =
(select min(ram)
from PC)

intersect
select maker
from product
where type = 'printer'

--
(from prod in Products
join pc in PCs 
on prod.Model equals pc.Model
where pc.Speed == 
(from pc1 in PCs
where pc1.Ram == PCs.Min(x => x.Ram)
select pc1.Speed).Max()
&& pc.Ram == (from pc2 in PCs
select pc2.Ram).Min()
select prod.Maker)
.Intersect
(
	from prod in Products
	where prod.Type == "printer"
	select prod.Maker
)


26)
Select avg(price)
from 
(select price
from pc inner join product
on pc.Model = product.Model
where product.Maker = 'A'
union all
select price
from laptop inner join product
on laptop .Model = product.Model
where product.Maker = 'A') x


--
(from x in
((from pc in PCs
join prod in Products
on pc.Model equals prod.Model
where prod.Maker == "A"
select pc.Price).Concat
(from l in Laptops
join prod in Products
on l.Model equals prod.Model
where prod.Maker == "A"
select l.Price))
select x).Average()


27)
Select distinct maker, avg(hd)
from product inner join pc
on product.model = pc.model
where maker in 
(select distinct maker
from product 
where type ='printer')
group by maker

--
from x in (from prod in Products
join pc in PCs
on prod.Model equals pc.Model
select new {prod, pc})
let squery = (from product in Products
			where product.Type == "Printer"
			select product.Maker).Distinct()
where squery.Contains(x.prod.Maker)
group x by x.prod.Maker
into xs
select new 
{
	Maker = xs.Key,
	AverageHd = xs.Average(x => x.pc.Hd)
}


28)
select count(distinct maker)
from product
-- Нужно дописать where условие, но какое?
group by maker
having count(distinct model) = 1


29)




35)
Select distinct model, type
from product
where model like '%[0-9]%'
and ISNUMERIC(model) = 1
OR model like '%[A-Z]%'
and model NOT LIKE '%[0-9]%'



47) !!!
Select Count(*) no, p1.maker, p1.model
from product p1 join
 product p2 on p1.model <= p2.model
group by p1.model, p1.maker
order by p1.model asc, p1.maker desc

--
from p1 in Products
from p2 in Products
where Convert.ToInt32(p1.Model) <= Convert.ToInt32(p2.Model)

group p1 by p1.Model
into p1s
orderby p1s.Key ascending
select new 
{
	Maker = p1s.Key,
	Model = p1s.Select(x => x.Maker),
	Count = p1s.Count()
}




